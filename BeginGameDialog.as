package{	import flash.display.Graphics;	import flash.display.Sprite;	import flash.events.Event;	import flash.text.TextField;	import flash.events.MouseEvent;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.text.AntiAliasType;		/**	 * Class that displays instructions at the beginning of the game.	 */	public class BeginGameDialog extends Sprite	{		private var _mcBG:Sprite;		// Dialog background graphic.		private var _txt:TextField;		// Instruction text displayed on dialog.		private var _txtStart:TextField;// 'Begin' text displayed on dialog		private var _sMsg:String;		// Instructions/explanations for game.		private var _nItems:int;		// Number of hidden items/pieces.				/*		 * Constructor for the dialog; calls the init() method.		 * 		 * @param	nItems	The number of items hidden.		 */		public function BeginGameDialog(nItems:int)		{			_nItems = nItems;			super();			init();		}				/*		 * Initializes the dialog by creating a little graphical background and the TextField message.		 */		private function init():void		{			if(_mcBG)				return;							_sMsg = "Game is very similar to mine sweeper but you always find the mines.\n" + 				"Clicking a square will either turn it red (incorrect guess) or blue (correct guess). " +				"Once all the items have been found the game ends. At this point if you click the 'Game Over' " +				"dialog the game resets.\nNumber of hidden items: ";						addEventListener(Event.ADDED_TO_STAGE, stageHandler);			_mcBG = new Sprite();			_mcBG.graphics.beginFill(0x333333);			_mcBG.graphics.lineStyle(5, 0x00FFFF);			_mcBG.graphics.drawRoundRect(0, 0, 400, 200, 10);			_mcBG.graphics.endFill();			addChild(_mcBG);						_txt = new TextField();			_txt.x = 5;			_txt.y = 5;			_txt.width = 390;			_txt.height = 190;			_txt.wordWrap = true;			//_txt.embedFonts = true;            _txt.antiAliasType = AntiAliasType.ADVANCED;			_txt.text = _sMsg + _nItems;			_txt.setTextFormat(new TextFormat('Arial', '16', 0xFFFFFF, true, null, null, null, null, TextFormatAlign.CENTER));			_mcBG.addChild(_txt);						_txtStart = new TextField();			_txtStart.x = 5;			_txtStart.y = 5;			_txtStart.width = 390;			_txtStart.wordWrap = true;			//_txtStart.embedFonts = true;            _txtStart.antiAliasType = AntiAliasType.ADVANCED;			_txtStart.text = "Begin"			_txtStart.setTextFormat(new TextFormat('Arial', '26', 0xFFFFFF, true, null, null, null, null, TextFormatAlign.CENTER));			_txtStart.y = 150;			_mcBG.addChild(_txtStart);		}				/**		 * Draws a tint to prevent touching the gameboard and updates the dialogs position		 * on the display list.		 *		 * @param	event	Event dispatched by the dialog when it is added to the display list.		 */		private function stageHandler(event:Event):void		{			this.graphics.beginFill(0x000000, 0.4);			this.graphics.drawRect(0,0,stage.width,stage.height);			this.graphics.endFill();						if(_mcBG.x == 0)			{				_mcBG.x = (stage.width - _mcBG.width)/2;				_mcBG.y = (stage.height - _mcBG.height)/2;			}			else			{				_mcBG.visible = true;			}		}				/**		 * Sets the number of hidden items/pieces.		 *		 * @param	value	Number of hidden items/pieces.		 */		public function set items(value:int):void		{			_txt.text = _sMsg + value;			_txt.setTextFormat(new TextFormat('Arial', '16', 0xFFFFFF, true, null, null, null, null, TextFormatAlign.CENTER));		}	}}